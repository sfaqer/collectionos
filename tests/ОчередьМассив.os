#Использовать asserts

#Использовать ".."
#Использовать "./ТестМодуль"

Перем Рефлектор;               // Рефлектор
Перем ДляКаждогоВыполнилсяРаз; // Количество раз которое выполнился метод ДляКаждого
Перем ОчередьФикстура;         // Кеш очереди фикстуры

&Тест
Процедура ОчередьМассивСоздается() Экспорт
	
	// Дано

	// Когда

	Результат = Новый ОчередьМассив;

	// Тогда

	Ожидаем.Что(Результат).ИмеетТип("ОчередьМассив");

КонецПроцедуры

&Тест
Процедура Итератор() Экспорт

	// Дано
	
	ОчередьМассив = Новый ОчередьМассив;

	// Когда

	Результат = ОчередьМассив.Итератор();

	// Тогда
	
	Ожидаем.Что(Результат).ИмеетТип("ИтераторМассив");

КонецПроцедуры

&Тест
Процедура ДляКаждого() Экспорт

	// Дано

	ДляКаждогоВыполнилсяРаз = 0;

	Массив = Новый Массив;
	Массив.Добавить(1);
	Массив.Добавить(2);
	Массив.Добавить(3);

	ОчередьМассив = Новый ОчередьМассив;

	Рефлектор.УстановитьСвойство(
		ОчередьМассив,
		"Массив",
		Массив
	);

	// Когда

	ОчередьМассив.ДляКаждого(Новый Действие(ЭтотОбъект, "ДействиеДляКаждого"));

	// Тогда
	
	Ожидаем.Что(ДляКаждогоВыполнилсяРаз).Равно(3);

КонецПроцедуры

&Тест
Процедура ДляКаждогоЛямбда() Экспорт

	// Дано

	ТестМодуль.ДляКаждогоВыполнилсяРаз = 0;
	ТестМодуль.СуммаЭлементов          = 0;

	Массив = Новый Массив;
	Массив.Добавить(1);
	Массив.Добавить(2);
	Массив.Добавить(3);

	ОчередьМассив = Новый ОчередьМассив;

	Рефлектор.УстановитьСвойство(
		ОчередьМассив,
		"Массив",
		Массив
	);

	// Когда

	ОчередьМассив.ДляКаждого(
		"Элемент -> ТестМодуль.ДляКаждогоВыполнилсяРаз = ТестМодуль.ДляКаждогоВыполнилсяРаз + 1;
		|	ТестМодуль.СуммаЭлементов = ТестМодуль.СуммаЭлементов + Элемент;"
	);

	// Тогда
	
	Ожидаем.Что(ТестМодуль.ДляКаждогоВыполнилсяРаз).Равно(3);
	Ожидаем.Что(ТестМодуль.СуммаЭлементов).Равно(6);

КонецПроцедуры

&Тест
Процедура ДляКаждогоЛямбдаКонтекстСтруктура() Экспорт

	// Дано

	Контекст = Новый Структура("ДляКаждогоВыполнилсяРаз, СуммаЭлементов", 0, 0);

	Массив = Новый Массив;
	Массив.Добавить(1);
	Массив.Добавить(2);
	Массив.Добавить(3);

	ОчередьМассив = Новый ОчередьМассив;

	Рефлектор.УстановитьСвойство(
		ОчередьМассив,
		"Массив",
		Массив
	);

	// Когда

	ОчередьМассив.ДляКаждого(
		"Элемент -> Контекст.ДляКаждогоВыполнилсяРаз = Контекст.ДляКаждогоВыполнилсяРаз + 1;
		|	Контекст.СуммаЭлементов = Контекст.СуммаЭлементов + Элемент;",
		Новый Структура("Контекст", Контекст)
	);

	// Тогда

	Ожидаем.Что(Контекст.ДляКаждогоВыполнилсяРаз).Равно(3);
	Ожидаем.Что(Контекст.СуммаЭлементов).Равно(6);

КонецПроцедуры

&Тест
Процедура ДляКаждогоЛямбдаКонтекстОбъект() Экспорт

	// Дано

	ТестМодуль.ДляКаждогоВыполнилсяРаз = 0;
	ТестМодуль.СуммаЭлементов          = 0;

	Массив = Новый Массив;
	Массив.Добавить(1);
	Массив.Добавить(2);
	Массив.Добавить(3);

	ОчередьМассив = Новый ОчередьМассив;

	Рефлектор.УстановитьСвойство(
		ОчередьМассив,
		"Массив",
		Массив
	);

	// Когда

	ОчередьМассив.ДляКаждого(
		"Элемент -> ДляКаждогоВыполнилсяРаз = ДляКаждогоВыполнилсяРаз + 1;
		|	СуммаЭлементов = СуммаЭлементов + Элемент;",
		ТестМодуль
	);

	// Тогда

	Ожидаем.Что(ТестМодуль.ДляКаждогоВыполнилсяРаз).Равно(3);
	Ожидаем.Что(ТестМодуль.СуммаЭлементов).Равно(6);

КонецПроцедуры

&Тест
Процедура Содержит() Экспорт

	// Дано
	
	Массив = Новый Массив;
	Массив.Добавить(1);
	Массив.Добавить(2);
	Массив.Добавить(3);

	ОчередьМассив = Новый ОчередьМассив;

	Рефлектор.УстановитьСвойство(
		ОчередьМассив,
		"Массив",
		Массив
	);

	// Когда

	Результат = ОчередьМассив.Содержит(2);

	// Тогда
	
	Ожидаем.Что(Результат).ЭтоИстина();

КонецПроцедуры

&Тест
Процедура НеСодержит() Экспорт

	// Дано
	
	Массив = Новый Массив;
	Массив.Добавить(1);
	Массив.Добавить(2);
	Массив.Добавить(3);

	ОчередьМассив = Новый ОчередьМассив;

	Рефлектор.УстановитьСвойство(
		ОчередьМассив,
		"Массив",
		Массив
	);

	// Когда

	Результат = ОчередьМассив.Содержит(4);

	// Тогда
	
	Ожидаем.Что(Результат).ЭтоЛожь();

КонецПроцедуры

&Тест
Процедура СодержитВсе() Экспорт

	// Дано
	
	Массив = Новый Массив;
	Массив.Добавить(1);
	Массив.Добавить(2);
	Массив.Добавить(3);

	ОчередьМассив = Новый ОчередьМассив;

	Рефлектор.УстановитьСвойство(
		ОчередьМассив,
		"Массив",
		Массив
	);

	// Когда

	Результат = ОчередьМассив.СодержитВсе(
		ОчередьФикстура()
	);

	// Тогда
	
	Ожидаем.Что(Результат).ЭтоИстина();

КонецПроцедуры

&Тест
Процедура СодержитНеВсе() Экспорт

	// Дано
	
	Массив = Новый Массив;
	Массив.Добавить(1);
	Массив.Добавить(2);

	ОчередьМассив = Новый ОчередьМассив;

	Рефлектор.УстановитьСвойство(
		ОчередьМассив,
		"Массив",
		Массив
	);

	// Когда

	Результат = ОчередьМассив.СодержитВсе(
		ОчередьФикстура()
	);

	// Тогда
	
	Ожидаем.Что(Результат).ЭтоЛожь();

КонецПроцедуры

&Тест
Процедура Пусто() Экспорт

	// Дано

	ОчередьМассив = Новый ОчередьМассив;

	Рефлектор.УстановитьСвойство(
		ОчередьМассив,
		"Массив",
		Новый Массив
	);

	// Когда

	Результат = ОчередьМассив.Пусто();

	// Тогда
	
	Ожидаем.Что(Результат).ЭтоИстина();

КонецПроцедуры

&Тест
Процедура НеПусто() Экспорт

	// Дано

	Массив = Новый Массив;
	Массив.Добавить(1);

	ОчередьМассив = Новый ОчередьМассив;

	Рефлектор.УстановитьСвойство(
		ОчередьМассив,
		"Массив",
		Массив
	);
	// Когда

	Результат = ОчередьМассив.Пусто();

	// Тогда
	
	Ожидаем.Что(Результат).ЭтоЛожь();

КонецПроцедуры

&Тест
Процедура ПроцессорКоллекции() Экспорт
	
	// Дано

	ОчередьМассив = Новый ОчередьМассив;

	// Когда

	Результат = ОчередьМассив.ПроцессорКоллекции();

	// Тогда

	Ожидаем.Что(Результат).ИмеетТип("ПроцессорКоллекций");

КонецПроцедуры

&Тест
Процедура Количество() Экспорт
	
	// Дано
	
	Массив = Новый Массив;
	Массив.Добавить(1);
	Массив.Добавить(2);
	Массив.Добавить(3);

	ОчередьМассив = Новый ОчередьМассив;

	Рефлектор.УстановитьСвойство(
		ОчередьМассив,
		"Массив",
		Массив
	);

	// Когда

	Результат = ОчередьМассив.Количество();

	// Тогда
	
	Ожидаем.Что(Результат).Равно(3);

КонецПроцедуры

&Тест
Процедура Добавить() Экспорт
	
	// Дано
	
	Массив = Новый Массив;
	Массив.Добавить(1);
	Массив.Добавить(2);
	Массив.Добавить(3);

	ОчередьМассив = Новый ОчередьМассив;

	Рефлектор.УстановитьСвойство(
		ОчередьМассив,
		"Массив",
		Массив
	);

	// Когда

	Результат = ОчередьМассив.Добавить(4);

	// Тогда
	
	Ожидаем.Что(Результат).ЭтоИстина();

	Ожидаем.Что(Массив).ИмеетДлину(4);
	Ожидаем.Что(Массив[0]).Равно(1);
	Ожидаем.Что(Массив[1]).Равно(2);
	Ожидаем.Что(Массив[2]).Равно(3);
	Ожидаем.Что(Массив[3]).Равно(4);

КонецПроцедуры

&Тест
Процедура ДобавитьНеопределено() Экспорт

	// Дано

	ОчередьМассив = Новый ОчередьМассив;
	Параметры = Новый Массив;
	Параметры.Добавить(Неопределено);

	// Когда

	// Тогда

	Ожидаем.Что(ОчередьМассив).Метод("Добавить", Параметры)
		.ВыбрасываетИсключение("Очередь не может содержать Неопределено");

КонецПроцедуры

&Тест
Процедура ДобавитьВсе() Экспорт
	
	// Дано
	
	ОчередьМассив = Новый ОчередьМассив;

	// Когда

	Результат = ОчередьМассив.ДобавитьВсе(
		ОчередьФикстура()
	);

	// Тогда

	Ожидаем.Что(Результат).ЭтоИстина();

	Массив = Рефлектор.ПолучитьСвойство(ОчередьМассив, "Массив");

	Ожидаем.Что(Массив).ИмеетДлину(3);
	Ожидаем.Что(Массив[0]).Равно(1);
	Ожидаем.Что(Массив[1]).Равно(2);
	Ожидаем.Что(Массив[2]).Равно(3);

КонецПроцедуры

&Тест
Процедура НеДобавитьВсе() Экспорт
	
	// Дано
	
	Массив = Новый Массив;
	Массив.Добавить(1);
	Массив.Добавить(2);
	Массив.Добавить(3);

	ОчередьМассив = Новый ОчередьМассив;

	Рефлектор.УстановитьСвойство(
		ОчередьМассив,
		"Массив",
		Массив
	);

	// Когда

	Результат = ОчередьМассив.ДобавитьВсе(
		ПустаяОчередьФикстура()
	);

	// Тогда
	
	Ожидаем.Что(Результат).ЭтоЛожь();
	
	Ожидаем.Что(Массив).ИмеетДлину(3);
	Ожидаем.Что(Массив[0]).Равно(1);
	Ожидаем.Что(Массив[1]).Равно(2);
	Ожидаем.Что(Массив[2]).Равно(3);

КонецПроцедуры

&Тест
Процедура Очистить() Экспорт
	
	// Дано
	
	Массив = Новый Массив;
	Массив.Добавить(1);
	Массив.Добавить(2);
	Массив.Добавить(3);

	ОчередьМассив = Новый ОчередьМассив;

	Рефлектор.УстановитьСвойство(
		ОчередьМассив,
		"Массив",
		Массив
	);

	// Когда

	ОчередьМассив.Очистить();

	// Тогда
	
	Ожидаем.Что(Массив).ИмеетДлину(0);

КонецПроцедуры

&Тест
Процедура Удалить() Экспорт
	
	// Дано
	
	Массив = Новый Массив;
	Массив.Добавить(1);
	Массив.Добавить(2);
	Массив.Добавить(3);

	ОчередьМассив = Новый ОчередьМассив;

	Рефлектор.УстановитьСвойство(
		ОчередьМассив,
		"Массив",
		Массив
	);

	// Когда

	Результат = ОчередьМассив.Удалить(2);

	// Тогда
	
	Ожидаем.Что(Результат).ЭтоИстина();

	Ожидаем.Что(Массив).ИмеетДлину(2);
	Ожидаем.Что(Массив[0]).Равно(1);
	Ожидаем.Что(Массив[1]).Равно(3);

КонецПроцедуры

&Тест
Процедура НеУдалить() Экспорт
	
	// Дано
	
	Массив = Новый Массив;
	Массив.Добавить(1);
	Массив.Добавить(2);
	Массив.Добавить(3);

	ОчередьМассив = Новый ОчередьМассив;

	Рефлектор.УстановитьСвойство(
		ОчередьМассив,
		"Массив",
		Массив
	);

	// Когда

	Результат = ОчередьМассив.Удалить(4);

	// Тогда
	
	Ожидаем.Что(Результат).ЭтоЛожь();

	Ожидаем.Что(Массив).ИмеетДлину(3);
	Ожидаем.Что(Массив[0]).Равно(1);
	Ожидаем.Что(Массив[1]).Равно(2);
	Ожидаем.Что(Массив[2]).Равно(3);

КонецПроцедуры

&Тест
Процедура УдалитьВсе() Экспорт
	
	// Дано
	
	Массив = Новый Массив;
	Массив.Добавить(1);
	Массив.Добавить(2);
	Массив.Добавить(4);

	ОчередьМассив = Новый ОчередьМассив;

	Рефлектор.УстановитьСвойство(
		ОчередьМассив,
		"Массив",
		Массив
	);

	// Когда

	Результат = ОчередьМассив.УдалитьВсе(ОчередьФикстура());

	// Тогда
	
	Ожидаем.Что(Результат).ЭтоИстина();
	
	Ожидаем.Что(Массив).ИмеетДлину(1);
	Ожидаем.Что(Массив[0]).Равно(4);

КонецПроцедуры

&Тест
Процедура НеУдалитьВсе() Экспорт
	
	// Дано
	
	Массив = Новый Массив;
	Массив.Добавить(4);
	Массив.Добавить(5);
	Массив.Добавить(6);

	ОчередьМассив = Новый ОчередьМассив;

	Рефлектор.УстановитьСвойство(
		ОчередьМассив,
		"Массив",
		Массив
	);

	// Когда

	Результат = ОчередьМассив.УдалитьВсе(ОчередьФикстура());

	// Тогда
	
	Ожидаем.Что(Результат).ЭтоЛожь();

	Ожидаем.Что(Массив).ИмеетДлину(3);
	Ожидаем.Что(Массив[0]).Равно(4);
	Ожидаем.Что(Массив[1]).Равно(5);
	Ожидаем.Что(Массив[2]).Равно(6);

КонецПроцедуры

&Тест
Процедура УдалитьЕсли() Экспорт
	
	// Дано
	
	Массив = Новый Массив;
	Массив.Добавить(1);
	Массив.Добавить(2);
	Массив.Добавить(3);

	ОчередьМассив = Новый ОчередьМассив;

	Рефлектор.УстановитьСвойство(
		ОчередьМассив,
		"Массив",
		Массив
	);

	// Когда

	Результат = ОчередьМассив.УдалитьЕсли(
		Новый Действие(ЭтотОбъект, "БольшеИлиРавноДвум")
	);

	// Тогда
	
	Ожидаем.Что(Результат).ЭтоИстина();

	Ожидаем.Что(Массив).ИмеетДлину(1);
	Ожидаем.Что(Массив[0]).Равно(1);

КонецПроцедуры

&Тест
Процедура НеУдалитьЕсли() Экспорт
	
	// Дано
	
	Массив = Новый Массив;
	Массив.Добавить(0);
	Массив.Добавить(1);

	ОчередьМассив = Новый ОчередьМассив;

	Рефлектор.УстановитьСвойство(
		ОчередьМассив,
		"Массив",
		Массив
	);

	// Когда

	Результат = ОчередьМассив.УдалитьЕсли(
		Новый Действие(ЭтотОбъект, "БольшеИлиРавноДвум")
	);

	// Тогда
	
	Ожидаем.Что(Результат).ЭтоЛожь();

	Ожидаем.Что(Массив).ИмеетДлину(2);
	Ожидаем.Что(Массив[0]).Равно(0);
	Ожидаем.Что(Массив[1]).Равно(1);

КонецПроцедуры

&Тест
Процедура УдалитьЕслиЛямбда() Экспорт
	
	// Дано
	
	Массив = Новый Массив;
	Массив.Добавить(1);
	Массив.Добавить(2);
	Массив.Добавить(3);

	ОчередьМассив = Новый ОчередьМассив;

	Рефлектор.УстановитьСвойство(
		ОчередьМассив,
		"Массив",
		Массив
	);
	// Когда

	Результат = ОчередьМассив.УдалитьЕсли(
		"Элемент -> Элемент >= 2"
	);

	// Тогда
	
	Ожидаем.Что(Результат).ЭтоИстина();

	Ожидаем.Что(Массив).ИмеетДлину(1);
	Ожидаем.Что(Массив[0]).Равно(1);

КонецПроцедуры

&Тест
Процедура УдалитьЕслиЛямбдаКонтекстСтруктура() Экспорт

	// Дано

	Массив = Новый Массив;
	Массив.Добавить(1);
	Массив.Добавить(2);
	Массив.Добавить(3);

	ОчередьМассив = Новый ОчередьМассив;

	Рефлектор.УстановитьСвойство(
		ОчередьМассив,
		"Массив",
		Массив
	);
	// Когда

	Результат = ОчередьМассив.УдалитьЕсли(
		"Элемент -> Элемент >= Порог",
		Новый Структура("Порог", 2)
	);

	// Тогда

	Ожидаем.Что(Результат).ЭтоИстина();

	Ожидаем.Что(Массив).ИмеетДлину(1);
	Ожидаем.Что(Массив[0]).Равно(1);

КонецПроцедуры

&Тест
Процедура УдалитьЕслиЛямбдаКонтекстОбъект() Экспорт

	// Дано

	ТестМодуль.СуммаЭлементов = 2;

	Массив = Новый Массив;
	Массив.Добавить(1);
	Массив.Добавить(2);
	Массив.Добавить(3);

	ОчередьМассив = Новый ОчередьМассив;

	Рефлектор.УстановитьСвойство(
		ОчередьМассив,
		"Массив",
		Массив
	);
	// Когда

	Результат = ОчередьМассив.УдалитьЕсли(
		"Элемент -> Элемент >= СуммаЭлементов",
		ТестМодуль
	);

	// Тогда

	Ожидаем.Что(Результат).ЭтоИстина();

	Ожидаем.Что(Массив).ИмеетДлину(1);
	Ожидаем.Что(Массив[0]).Равно(1);

КонецПроцедуры

&Тест
Процедура СохранитьВсе() Экспорт
	
	// Дано
	
	Массив = Новый Массив;
	Массив.Добавить(0);
	Массив.Добавить(1);

	ОчередьМассив = Новый ОчередьМассив;

	Рефлектор.УстановитьСвойство(
		ОчередьМассив,
		"Массив",
		Массив
	);

	// Когда

	Результат = ОчередьМассив.СохранитьВсе(
		ОчередьФикстура()
	);

	// Тогда
	
	Ожидаем.Что(Результат).ЭтоИстина();

	Ожидаем.Что(Массив).ИмеетДлину(1);
	Ожидаем.Что(Массив[0]).Равно(1);

КонецПроцедуры

&Тест
Процедура НеСохранитьВсе() Экспорт
	
	// Дано
	
	Массив = Новый Массив;
	Массив.Добавить(1);
	Массив.Добавить(2);

	ОчередьМассив = Новый ОчередьМассив;

	Рефлектор.УстановитьСвойство(
		ОчередьМассив,
		"Массив",
		Массив
	);

	// Когда

	Результат = ОчередьМассив.СохранитьВсе(
		ОчередьФикстура()
	);

	// Тогда
	
	Ожидаем.Что(Результат).ЭтоЛожь();

	Ожидаем.Что(Массив).ИмеетДлину(2);
	Ожидаем.Что(Массив[0]).Равно(1);
	Ожидаем.Что(Массив[1]).Равно(2);

КонецПроцедуры

&Тест
Процедура ВМассив() Экспорт
	
	// Дано

	Массив = Новый Массив;
	Массив.Добавить(1);
	Массив.Добавить(2);

	ОчередьМассив = Новый ОчередьМассив;

	Рефлектор.УстановитьСвойство(
		ОчередьМассив,
		"Массив",
		Массив
	);

	// Когда

	Результат = ОчередьМассив.ВМассив();

	// Тогда
	
	Ожидаем.Что(Результат)
		.ИмеетТип("Массив")
		.ИмеетДлину(2)
		.Содержит(1)
		.Содержит(2)
		.Не_().Равно(Массив);

КонецПроцедуры

&Тест
Процедура МутацияИнвалидируетИтераторы() Экспорт
	
	// Дано

	Массив = Новый Массив;
	Массив.Добавить(1);
	Массив.Добавить(2);

	ОчередьМассив = Новый ОчередьМассив;

	Рефлектор.УстановитьСвойство(
		ОчередьМассив,
		"Массив",
		Массив
	);
	
	Итератор = ОчередьМассив.Итератор();

	// Когда

	ОчередьМассив.Добавить(4);

	// Тогда

	Ожидаем.Что(Итератор)
		.Метод("Следующий")
		.ВыбрасываетИсключение("Коллекция была изменена в процессе обхода");

КонецПроцедуры

&Тест
Процедура ПреставлениеПереопределяется() Экспорт
	
	// Дано

	ОчередьМассив = Новый ОчередьМассив;

	Массив = Новый Массив;
	Массив.Добавить(1);
	Массив.Добавить(2);
	Массив.Добавить(ОчередьМассив);
	Массив.Добавить(ТестМодуль.ОбъектЗаглушка());

	Рефлектор.УстановитьСвойство(
		ОчередьМассив,
		"Массив",
		Массив
	);

	// Когда

	Результат = Строка(ОчередьМассив);

	// Тогда
	
	Ожидаем.Что(Результат)
		.Равно("[1, 2, (Эта коллекция), Заглушка]");

КонецПроцедуры

&Тест
Процедура ОбходитсяЦикломДляКаждого() Экспорт

	Если Не ТестМодуль.ЭтоДвижокВерсии2() Тогда
		Возврат;
	КонецЕсли;

	// Дано

	Массив = Новый Массив;
	Массив.Добавить(1);
	Массив.Добавить(2);

	ОчередьМассив = Новый ОчередьМассив;
	Рефлектор.УстановитьСвойство(
		ОчередьМассив,
		"Массив",
		Массив
	);

	// Когда

	// Тогда

	Для каждого Элемент Из ОчередьМассив Цикл

		Ожидаем.Что(Элемент)
			.БольшеИлиРавно(1)
			.МеньшеИлиРавно(2);

	КонецЦикла;

КонецПроцедуры

&Тест
Процедура ПодсмотретьОчередьПуста() Экспорт

	// Дано

	ОчередьМассив = Новый ОчередьМассив;

	// Когда

	Результат = ОчередьМассив.Подсмотреть();

	// Тогда

	Ожидаем.Что(Результат)
		.Равно(Опциональные.Пустой());

КонецПроцедуры

&Тест
Процедура ПодсмотретьОчередьНеПуста() Экспорт

	// Дано

	Массив = Новый Массив;
	Массив.Добавить(1);
	Массив.Добавить(2);
	Массив.Добавить(3);

	ОчередьМассив = Новый ОчередьМассив;

	Рефлектор.УстановитьСвойство(
		ОчередьМассив,
		"Массив",
		Массив
	);

	// Когда

	Результат = ОчередьМассив.Подсмотреть();

	// Тогда

	Ожидаем.Что(Результат).ИмеетТип("Опциональный");
	Ожидаем.Что(Результат.Пустой()).ЭтоЛожь();
	Ожидаем.Что(Результат.Получить()).Равно(1);

	Ожидаем.Что(Массив).ИмеетДлину(3);
	Ожидаем.Что(Массив[0]).Равно(1);
	Ожидаем.Что(Массив[1]).Равно(2);
	Ожидаем.Что(Массив[2]).Равно(3);

КонецПроцедуры

&Тест
Процедура Положить() Экспорт
	
	// Дано
	
	Массив = Новый Массив;
	Массив.Добавить(1);
	Массив.Добавить(2);
	Массив.Добавить(3);

	ОчередьМассив = Новый ОчередьМассив;

	Рефлектор.УстановитьСвойство(
		ОчередьМассив,
		"Массив",
		Массив
	);

	// Когда

	Результат = ОчередьМассив.Положить(4);

	// Тогда
	
	Ожидаем.Что(Результат).ЭтоИстина();

	Ожидаем.Что(Массив).ИмеетДлину(4);
	Ожидаем.Что(Массив[0]).Равно(1);
	Ожидаем.Что(Массив[1]).Равно(2);
	Ожидаем.Что(Массив[2]).Равно(3);
	Ожидаем.Что(Массив[3]).Равно(4);

КонецПроцедуры

&Тест
Процедура ВзятьОчередьПуста() Экспорт

	// Дано

	ОчередьМассив = Новый ОчередьМассив;

	// Когда

	Результат = ОчередьМассив.Взять();

	// Тогда

	Ожидаем.Что(Результат)
		.Равно(Опциональные.Пустой());

КонецПроцедуры

&Тест
Процедура ВзятьОчередьНеПуста() Экспорт

	// Дано

	Массив = Новый Массив;
	Массив.Добавить(1);
	Массив.Добавить(2);
	Массив.Добавить(3);

	ОчередьМассив = Новый ОчередьМассив;

	Рефлектор.УстановитьСвойство(
		ОчередьМассив,
		"Массив",
		Массив
	);

	// Когда

	Результат = ОчередьМассив.Взять();

	// Тогда

	Ожидаем.Что(Результат).ИмеетТип("Опциональный");
	Ожидаем.Что(Результат.Пустой()).ЭтоЛожь();
	Ожидаем.Что(Результат.Получить()).Равно(1);

	Ожидаем.Что(Массив).ИмеетДлину(2);
	Ожидаем.Что(Массив[0]).Равно(2);
	Ожидаем.Что(Массив[1]).Равно(3);

КонецПроцедуры

Функция БольшеИлиРавноДвум(Элемент) Экспорт
	Два = 2;
	Возврат Элемент >= Два;
КонецФункции

Процедура ДействиеДляКаждого(Элемент) Экспорт

	ДляКаждогоВыполнилсяРаз = ДляКаждогоВыполнилсяРаз + 1;

	Ожидаем.Что(Элемент).Равно(ДляКаждогоВыполнилсяРаз);

КонецПроцедуры

Функция ОчередьФикстура()
	
	Если ОчередьФикстура <> Неопределено Тогда
		Возврат ОчередьФикстура;
	КонецЕсли;

	Коллекция = Новый Массив;
	Коллекция.Добавить(1);
	Коллекция.Добавить(2);
	Коллекция.Добавить(3);

	ПолеМассив = Новый Поле("Массив")
		.Публичное()
		.ЗначениеПоУмолчанию(Коллекция);

	МетодИтератор = Новый Метод("Итератор")
		.Публичный()
		.ТелоМетода("Возврат Новый ИтераторМассив(Массив, ЭтотОбъект);");

	МетодСодержит = Новый Метод("Содержит")
		.Публичный()
		.Параметр(Новый ПараметрМетода("Элемент"))
		.ТелоМетода("Возврат Массив.Найти(Элемент) <> Неопределено;");

	ОчередьФикстура = Новый ПостроительДекоратора()
		.Поле(ПолеМассив)
		.Метод(МетодИтератор)
		.Метод(МетодСодержит)
		.Построить();

	Возврат ОчередьФикстура;

КонецФункции

Функция ПустаяОчередьФикстура()
	
	МетодИтератор = Новый Метод("Итератор")
		.Публичный()
		.ТелоМетода("Возврат Новый ИтераторМассив(Новый Массив, ЭтотОбъект);");

	Возврат Новый ПостроительДекоратора()
		.Метод(МетодИтератор)
		.Построить();

КонецФункции

Рефлектор = Новый Рефлектор;
