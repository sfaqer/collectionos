#Использовать asserts

#Использовать ".."
#Использовать "./ТестМодуль"

Перем ПроверяемоеЧисло; // Переменная в которую пишут фоновые задания

&Тест
Процедура СинхронизированныйСписокСоздаётся() Экспорт

	// Дано

	// Когда

	Результат = Новый СинхронизированныйСписок(Новый СписокМассив);

	// Тогда

	Ожидаем.Что(Результат).ИмеетТип("СинхронизированныйСписок");

КонецПроцедуры

&Тест
Процедура Итератор() Экспорт

	// Дано

	ПроверяемаяКоллекция = Новый СинхронизированныйСписок(Новый СписокМассив);

	// Когда

	Результат = ПроверяемаяКоллекция.Итератор();

	// Тогда

	Ожидаем.Что(Результат).ИмеетТип("СписокИтераторМассив");

КонецПроцедуры

&Тест
Процедура ДляКаждого() Экспорт

	ПроверяемоеЧисло = 0;

	// Дано
	
	СписокМассив = Новый СписокМассив();
	
	// BSLLS:DuplicatedInsertionIntoCollection-off
	СписокМассив.Добавить(1);
	СписокМассив.Добавить(1); 
	СписокМассив.Добавить(1);
	СписокМассив.Добавить(1);
	СписокМассив.Добавить(1);
	// BSLLS:DuplicatedInsertionIntoCollection-on
	
	ПроверяемаяКоллекция = Новый СинхронизированныйСписок(СписокМассив);

	// Когда

	ТестМодуль.ВыполнитьВПятьПотоков(
		ПроверяемаяКоллекция,
		"ДляКаждого",
		Новый Действие(ЭтотОбъект, "ДобавитьКПроверяемомуЧислу")
	);

	// Тогда

	Ожидаем.Что(ПроверяемоеЧисло).Равно(25);

КонецПроцедуры

&Тест
Процедура Содержит() Экспорт

	// Дано

	СписокМассив = Новый СписокМассив();

	СписокМассив.Добавить(1);
	СписокМассив.Добавить(2);
	СписокМассив.Добавить(3);

	ПроверяемаяКоллекция = Новый СинхронизированныйСписок(СписокМассив);

	// Когда

	Результаты = ТестМодуль.ВыполнитьВПятьПотоков(
		ПроверяемаяКоллекция,
		"Содержит",
		2
	);

	// Тогда

	Ожидаем.Что(Результаты).ИмеетТип("Массив").ИмеетДлину(5);

	Для каждого Результат Из Результаты Цикл
		Ожидаем.Что(Результат).ЭтоИстина();
	КонецЦикла;

КонецПроцедуры

&Тест
Процедура СодержитВсе() Экспорт

	// Дано

	СписокМассив = Новый СписокМассив();

	СписокМассив.Добавить(1);
	СписокМассив.Добавить(2);
	СписокМассив.Добавить(3);

	ПроверяемаяКоллекция = Новый СинхронизированныйСписок(СписокМассив);

	ПроверяющаяКоллекция = Новый СписокМассив();
	ПроверяющаяКоллекция.Добавить(1);
	ПроверяющаяКоллекция.Добавить(2);
	ПроверяющаяКоллекция.Добавить(3);

	// Когда

	Результаты = ТестМодуль.ВыполнитьВПятьПотоков(
		ПроверяемаяКоллекция,
		"СодержитВсе",
		ПроверяющаяКоллекция
	);

	// Тогда

	Ожидаем.Что(Результаты).ИмеетТип("Массив").ИмеетДлину(5);

	Для каждого Результат Из Результаты Цикл
		Ожидаем.Что(Результат).ЭтоИстина();
	КонецЦикла;

КонецПроцедуры

&Тест
Процедура Пусто() Экспорт

	// Дано

	СписокМассив = Новый СписокМассив();

	СписокМассив.Добавить(1);
	СписокМассив.Добавить(2);
	СписокМассив.Добавить(3);

	ПроверяемаяКоллекция = Новый СинхронизированныйСписок(СписокМассив);

	// Когда

	Результаты = ТестМодуль.ВыполнитьВПятьПотоков(
		ПроверяемаяКоллекция,
		"Пусто"
	);

	// Тогда

	Ожидаем.Что(Результаты).ИмеетТип("Массив").ИмеетДлину(5);

	Для каждого Результат Из Результаты Цикл
		Ожидаем.Что(Результат).ЭтоЛожь();
	КонецЦикла;

КонецПроцедуры

&Тест
Процедура ПроцессорКоллекции() Экспорт

	// Дано

	ПроверяемаяКоллекция = Новый СинхронизированныйСписок(Новый СписокМассив);

	// Когда

	Результат = ПроверяемаяКоллекция.ПроцессорКоллекции();

	// Тогда

	Ожидаем.Что(Результат).ИмеетТип("ПроцессорКоллекций");

КонецПроцедуры

&Тест
Процедура Количество() Экспорт

	// Дано

	СписокМассив = Новый СписокМассив();

	СписокМассив.Добавить(1);
	СписокМассив.Добавить(2);
	СписокМассив.Добавить(3);

	ПроверяемаяКоллекция = Новый СинхронизированныйСписок(СписокМассив);

	// Когда

	Результаты = ТестМодуль.ВыполнитьВПятьПотоков(
		ПроверяемаяКоллекция,
		"Количество"
	);

	// Тогда

	Ожидаем.Что(Результаты).ИмеетТип("Массив").ИмеетДлину(5);

	Для каждого Результат Из Результаты Цикл
		Ожидаем.Что(Результат).Равно(3);
	КонецЦикла;

КонецПроцедуры

&Тест
Процедура ВМассив() Экспорт

	// Дано

	СписокМассив = Новый СписокМассив();

	СписокМассив.Добавить(1);
	СписокМассив.Добавить(2);
	СписокМассив.Добавить(3);

	ПроверяемаяКоллекция = Новый СинхронизированныйСписок(СписокМассив);

	// Когда

	Результаты = ТестМодуль.ВыполнитьВПятьПотоков(
		ПроверяемаяКоллекция,
		"ВМассив"
	);

	// Тогда

	Ожидаем.Что(Результаты).ИмеетТип("Массив").ИмеетДлину(5);

	Для каждого Результат Из Результаты Цикл
		
		Ожидаем.Что(Результат)
			.ИмеетТип("Массив")
			.ИмеетДлину(3)
			.Содержит(1)
			.Содержит(2)
			.Содержит(3);

	КонецЦикла;

КонецПроцедуры

&Тест
Процедура Добавить() Экспорт

	// Дано

	СписокМассив = Новый СписокМассив();

	ПроверяемаяКоллекция = Новый СинхронизированныйСписок(СписокМассив);

	// Когда

	Результаты = ТестМодуль.ВыполнитьВПятьПотоков(
		ПроверяемаяКоллекция,
		"Добавить",
		5
	);

	// Тогда

	Ожидаем.Что(Результаты).ИмеетТип("Массив").ИмеетДлину(5);

	Для каждого Результат Из Результаты Цикл
		Ожидаем.Что(Результат).ЭтоИстина();
	КонецЦикла;

	Ожидаем.Что(СписокМассив).ИмеетДлину(5);
	Ожидаем.Что(СписокМассив.Индекс(5)).Равно(0);
	Ожидаем.Что(СписокМассив.ПоследнийИндекс(5)).Равно(4);

КонецПроцедуры

&Тест
Процедура ДобавитьВсе() Экспорт

	// Дано

	СписокМассив = Новый СписокМассив();

	ПроверяемаяКоллекция = Новый СинхронизированныйСписок(СписокМассив);

	ДобавляемаяКоллекция = Новый СписокМассив();
	ДобавляемаяКоллекция.Добавить(1);
	ДобавляемаяКоллекция.Добавить(2);
	ДобавляемаяКоллекция.Добавить(3);

	// Когда

	Результаты = ТестМодуль.ВыполнитьВПятьПотоков(
		ПроверяемаяКоллекция,
		"ДобавитьВсе",
		ДобавляемаяКоллекция
	);

	// Тогда

	Ожидаем.Что(Результаты).ИмеетТип("Массив").ИмеетДлину(5);

	Для каждого Результат Из Результаты Цикл
		Ожидаем.Что(Результат).ЭтоИстина();
	КонецЦикла;

	Ожидаем.Что(СписокМассив).ИмеетДлину(15);

КонецПроцедуры

&Тест
Процедура Очистить() Экспорт

	// Дано

	СписокМассив = Новый СписокМассив();

	СписокМассив.Добавить(1);
	СписокМассив.Добавить(2);
	СписокМассив.Добавить(3);

	ПроверяемаяКоллекция = Новый СинхронизированныйСписок(СписокМассив);

	// Когда

	ТестМодуль.ВыполнитьВПятьПотоков(
		ПроверяемаяКоллекция,
		"Очистить"
	);

	// Тогда

	Ожидаем.Что(СписокМассив).ИмеетДлину(0);

КонецПроцедуры

&Тест
Процедура Удалить() Экспорт

	// Дано

	СписокМассив = Новый СписокМассив();
	СписокМассив.Добавить(1);
	СписокМассив.Добавить(2);
	СписокМассив.Добавить(3);

	ПроверяемаяКоллекция = Новый СинхронизированныйСписок(СписокМассив);

	// Когда

	Результаты = ТестМодуль.ВыполнитьВПятьПотоков(
		ПроверяемаяКоллекция,
		"Удалить",
		2
	);

	// Тогда

	Ожидаем.Что(Результаты).ИмеетТип("Массив").ИмеетДлину(5);

	КоличествоИстина = 0;
	КоличествоЛожь   = 0;

	Для каждого Результат Из Результаты Цикл
		
		Если Результат Тогда
			КоличествоИстина = КоличествоИстина + 1;
		Иначе
			КоличествоЛожь = КоличествоЛожь + 1;
		КонецЕсли;

	КонецЦикла;

	Ожидаем.Что(КоличествоИстина).Равно(1);
	Ожидаем.Что(КоличествоЛожь).Равно(4);

	Ожидаем.Что(СписокМассив).ИмеетДлину(2);

КонецПроцедуры

&Тест
Процедура УдалитьВсе() Экспорт

	// Дано

	СписокМассив = Новый СписокМассив();
	СписокМассив.Добавить(1);
	СписокМассив.Добавить(2);
	СписокМассив.Добавить(3);

	ПроверяемаяКоллекция = Новый СинхронизированныйСписок(СписокМассив);

	УдаляемаяКоллекция = Новый СписокМассив();
	УдаляемаяКоллекция.Добавить(1);
	УдаляемаяКоллекция.Добавить(2);

	// Когда

	Результаты = ТестМодуль.ВыполнитьВПятьПотоков(
		ПроверяемаяКоллекция,
		"УдалитьВсе",
		УдаляемаяКоллекция
	);

	// Тогда

	Ожидаем.Что(Результаты).ИмеетТип("Массив").ИмеетДлину(5);

	КоличествоИстина = 0;
	КоличествоЛожь   = 0;

	Для каждого Результат Из Результаты Цикл
		
		Если Результат Тогда
			КоличествоИстина = КоличествоИстина + 1;
		Иначе
			КоличествоЛожь = КоличествоЛожь + 1;
		КонецЕсли;

	КонецЦикла;

	Ожидаем.Что(КоличествоИстина).Равно(1);
	Ожидаем.Что(КоличествоЛожь).Равно(4);

	Ожидаем.Что(СписокМассив).ИмеетДлину(1);

КонецПроцедуры

&Тест
Процедура УдалитьЕсли() Экспорт

	// Дано

	СписокМассив = Новый СписокМассив();
	СписокМассив.Добавить(1);
	СписокМассив.Добавить(2);
	СписокМассив.Добавить(3);

	ПроверяемаяКоллекция = Новый СинхронизированныйСписок(СписокМассив);

	// Когда

	Результаты = ТестМодуль.ВыполнитьВПятьПотоков(
		ПроверяемаяКоллекция,
		"УдалитьЕсли",
		Новый Действие(ЭтотОбъект, "БольшеИлиРавноДвум")
	);

	// Тогда

	Ожидаем.Что(Результаты).ИмеетТип("Массив").ИмеетДлину(5);

	КоличествоИстина = 0;
	КоличествоЛожь   = 0;

	Для каждого Результат Из Результаты Цикл
		
		Если Результат Тогда
			КоличествоИстина = КоличествоИстина + 1;
		Иначе
			КоличествоЛожь = КоличествоЛожь + 1;
		КонецЕсли;

	КонецЦикла;

	Ожидаем.Что(КоличествоИстина).Равно(1);
	Ожидаем.Что(КоличествоЛожь).Равно(4);

	Ожидаем.Что(СписокМассив).ИмеетДлину(1);

КонецПроцедуры

&Тест
Процедура СохранитьВсе() Экспорт

	// Дано

	СписокМассив = Новый СписокМассив();
	СписокМассив.Добавить(1);
	СписокМассив.Добавить(2);
	СписокМассив.Добавить(3);

	ПроверяемаяКоллекция = Новый СинхронизированныйСписок(СписокМассив);

	СохраняемаяКоллекция = Новый СписокМассив();
	СохраняемаяКоллекция.Добавить(2);

	// Когда

	Результаты = ТестМодуль.ВыполнитьВПятьПотоков(
		ПроверяемаяКоллекция,
		"СохранитьВсе",
		СохраняемаяКоллекция
	);

	// Тогда

	Ожидаем.Что(Результаты).ИмеетТип("Массив").ИмеетДлину(5);

	КоличествоИстина = 0;
	КоличествоЛожь   = 0;

	Для каждого Результат Из Результаты Цикл
		
		Если Результат Тогда
			КоличествоИстина = КоличествоИстина + 1;
		Иначе
			КоличествоЛожь = КоличествоЛожь + 1;
		КонецЕсли;

	КонецЦикла;

	Ожидаем.Что(КоличествоИстина).Равно(1);
	Ожидаем.Что(КоличествоЛожь).Равно(4);

	Ожидаем.Что(СписокМассив).ИмеетДлину(1);

КонецПроцедуры

&Тест
Процедура Получить() Экспорт

	// Дано

	СписокМассив = Новый СписокМассив();

	СписокМассив.Добавить(1);

	ПроверяемаяКоллекция = Новый СинхронизированныйСписок(СписокМассив);

	// Когда

	Результаты = ТестМодуль.ВыполнитьВПятьПотоков(
		ПроверяемаяКоллекция,
		"Получить",
		0
	);

	// Тогда

	Ожидаем.Что(Результаты).ИмеетТип("Массив").ИмеетДлину(5);

	Для каждого Результат Из Результаты Цикл
		Ожидаем.Что(Результат).Равно(1);
	КонецЦикла;

КонецПроцедуры

&Тест
Процедура Индекс() Экспорт

	// Дано

	СписокМассив = Новый СписокМассив();

	СписокМассив.Добавить(1);

	ПроверяемаяКоллекция = Новый СинхронизированныйСписок(СписокМассив);

	// Когда

	Результаты = ТестМодуль.ВыполнитьВПятьПотоков(
		ПроверяемаяКоллекция,
		"Индекс",
		1
	);

	// Тогда

	Ожидаем.Что(Результаты).ИмеетТип("Массив").ИмеетДлину(5);

	Для каждого Результат Из Результаты Цикл
		Ожидаем.Что(Результат).Равно(0);
	КонецЦикла;

КонецПроцедуры

&Тест
Процедура ПоследнийИндекс() Экспорт

	// Дано

	СписокМассив = Новый СписокМассив();

	СписокМассив.Добавить(1);
	СписокМассив.Добавить(1); // BSLLS:DuplicatedInsertionIntoCollection-off

	ПроверяемаяКоллекция = Новый СинхронизированныйСписок(СписокМассив);

	// Когда

	Результаты = ТестМодуль.ВыполнитьВПятьПотоков(
		ПроверяемаяКоллекция,
		"ПоследнийИндекс",
		1
	);

	// Тогда

	Ожидаем.Что(Результаты).ИмеетТип("Массив").ИмеетДлину(5);

	Для каждого Результат Из Результаты Цикл
		Ожидаем.Что(Результат).Равно(1);
	КонецЦикла;

КонецПроцедуры

&Тест
Процедура ВГраница() Экспорт

	// Дано

	СписокМассив = Новый СписокМассив();

	СписокМассив.Добавить(1);
	СписокМассив.Добавить(2);

	ПроверяемаяКоллекция = Новый СинхронизированныйСписок(СписокМассив);

	// Когда

	Результаты = ТестМодуль.ВыполнитьВПятьПотоков(
		ПроверяемаяКоллекция,
		"ВГраница"
	);

	// Тогда

	Ожидаем.Что(Результаты).ИмеетТип("Массив").ИмеетДлину(5);

	Для каждого Результат Из Результаты Цикл
		Ожидаем.Что(Результат).Равно(1);
	КонецЦикла;

КонецПроцедуры

&Тест
Процедура Вставить() Экспорт

	// Дано

	СписокМассив = Новый СписокМассив();

	СписокМассив.Добавить(2);

	ПроверяемаяКоллекция = Новый СинхронизированныйСписок(СписокМассив);

	// Когда

	Результаты = ТестМодуль.ВыполнитьВПятьПотоков(
		ПроверяемаяКоллекция,
		"Вставить",
		0,
		1
	);

	// Тогда

	Ожидаем.Что(Результаты).ИмеетТип("Массив").ИмеетДлину(5);

	Для каждого Результат Из Результаты Цикл
		Ожидаем.Что(Результат).ЭтоИстина();
	КонецЦикла;

	Ожидаем.Что(СписокМассив).ИмеетДлину(6);
	Ожидаем.Что(СписокМассив.Индекс(2)).Равно(5);
	Ожидаем.Что(СписокМассив.Индекс(1)).Равно(0);
	Ожидаем.Что(СписокМассив.ПоследнийИндекс(1)).Равно(4);

КонецПроцедуры

&Тест
Процедура ВставитьВсе() Экспорт

	// Дано

	СписокМассив = Новый СписокМассив();

	ПроверяемаяКоллекция = Новый СинхронизированныйСписок(СписокМассив);

	ДобавляемаяКоллекция = Новый СписокМассив();
	ДобавляемаяКоллекция.Добавить(1);
	ДобавляемаяКоллекция.Добавить(2);
	ДобавляемаяКоллекция.Добавить(3);

	// Когда

	Результаты = ТестМодуль.ВыполнитьВПятьПотоков(
		ПроверяемаяКоллекция,
		"ВставитьВсе",
		0,
		ДобавляемаяКоллекция
	);

	// Тогда

	Ожидаем.Что(Результаты).ИмеетТип("Массив").ИмеетДлину(5);

	Для каждого Результат Из Результаты Цикл
		Ожидаем.Что(Результат).ЭтоИстина();
	КонецЦикла;

	Ожидаем.Что(СписокМассив).ИмеетДлину(15);

	Для Счетчик = 0 По 4 Цикл
		Ожидаем.Что(СписокМассив.Получить(Счетчик * 3)).Равно(1);
		Ожидаем.Что(СписокМассив.Получить(Счетчик * 3 + 1)).Равно(2);
		Ожидаем.Что(СписокМассив.Получить(Счетчик * 3 + 2)).Равно(3);
	КонецЦикла;

КонецПроцедуры

&Тест
Процедура ЗаменитьВсе() Экспорт

	// Дано

	СписокМассив = Новый СписокМассив();

	СписокМассив.Добавить(1);
	СписокМассив.Добавить(2);
	СписокМассив.Добавить(3);

	ПроверяемаяКоллекция = Новый СинхронизированныйСписок(СписокМассив);

	// Когда

	ТестМодуль.ВыполнитьВПятьПотоков(
		ПроверяемаяКоллекция,
		"ЗаменитьВсе",
		Новый Действие(ЭтотОбъект, "Инкремент")
	);

	// Тогда

	Ожидаем.Что(СписокМассив).ИмеетДлину(3);
	Ожидаем.Что(СписокМассив.Получить(0)).Равно(6);
	Ожидаем.Что(СписокМассив.Получить(1)).Равно(7);
	Ожидаем.Что(СписокМассив.Получить(2)).Равно(8);

КонецПроцедуры

&Тест
Процедура Сортировать() Экспорт

	// Дано

	СписокМассив = Новый СписокМассив();

	СписокМассив.Добавить(2);
	СписокМассив.Добавить(3);
	СписокМассив.Добавить(1);

	ПроверяемаяКоллекция = Новый СинхронизированныйСписок(СписокМассив);

	// Когда

	ТестМодуль.ВыполнитьВПятьПотоков(
		ПроверяемаяКоллекция,
		"Сортировать",
		СравнениеЗначений.ПрямойПорядок()
	);

	// Тогда

	Ожидаем.Что(СписокМассив.Получить(0)).Равно(1);
	Ожидаем.Что(СписокМассив.Получить(1)).Равно(2);
	Ожидаем.Что(СписокМассив.Получить(2)).Равно(3);

КонецПроцедуры

&Тест
Процедура УдалитьПоИндексу() Экспорт

	// Дано

	СписокМассив = Новый СписокМассив();

	СписокМассив.Добавить(1);
	СписокМассив.Добавить(2);
	СписокМассив.Добавить(3);
	СписокМассив.Добавить(4);
	СписокМассив.Добавить(5);

	ПроверяемаяКоллекция = Новый СинхронизированныйСписок(СписокМассив);

	// Когда

	Результаты = ТестМодуль.ВыполнитьВПятьПотоков(
		ПроверяемаяКоллекция,
		"УдалитьПоИндексу",
		0
	);

	// Тогда

	Ожидаем.Что(Результаты).ИмеетТип("Массив").ИмеетДлину(5);

	Для каждого Результат Из Результаты Цикл
		Ожидаем.Что(Результат).ИмеетТип("Число");
	КонецЦикла;

	Ожидаем.Что(СписокМассив).ИмеетДлину(0);

КонецПроцедуры

&Тест
Процедура Установить() Экспорт

	// Дано

	СписокМассив = Новый СписокМассив();

	СписокМассив.Добавить(1);

	ПроверяемаяКоллекция = Новый СинхронизированныйСписок(СписокМассив);

	// Когда

	Результаты = ТестМодуль.ВыполнитьВПятьПотоков(
		ПроверяемаяКоллекция,
		"Установить",
		0,
		2
	);

	// Тогда

	Ожидаем.Что(Результаты).ИмеетТип("Массив").ИмеетДлину(5);

	ВернулосьЕдиниц = 0;
	ВернулосьДвоек  = 0;

	Для каждого Результат Из Результаты Цикл
		
		Если Результат = 1 Тогда
			ВернулосьЕдиниц = ВернулосьЕдиниц + 1;
		Иначе
			ВернулосьДвоек = ВернулосьДвоек + 1;
		КонецЕсли;

	КонецЦикла;

	Ожидаем.Что(ВернулосьЕдиниц).Равно(1);
	Ожидаем.Что(ВернулосьДвоек).Равно(4);

	Ожидаем.Что(СписокМассив).ИмеетДлину(1);
	Ожидаем.Что(СписокМассив.Получить(0)).Равно(2);

КонецПроцедуры

&Тест
Процедура ПреставлениеПереопределяется() Экспорт

	// Дано
	
	СписокМассив = Новый СписокМассив();
	СписокМассив.Добавить(1);
	СписокМассив.Добавить(2);
	СписокМассив.Добавить(ТестМодуль.ОбъектЗаглушка());

	ПроверяемаяКоллекция = Новый СинхронизированныйСписок(СписокМассив);
	ПроверяемаяКоллекция.Добавить(ПроверяемаяКоллекция); // BSLLS:SelfInsertion-off Тестовый случай

	// Когда

	Результаты = ТестМодуль.ВыполнитьВПятьПотоков(
		ТестМодуль,
		"ВСтроку",
		ПроверяемаяКоллекция
	);

	// Тогда

	Для каждого Результат Из Результаты Цикл
		Ожидаем.Что(Результат)
			.Равно("[1, 2, Заглушка, (Эта коллекция)]");
	КонецЦикла;

КонецПроцедуры

&Тест
Процедура ОбходитсяЦикломДляКаждого() Экспорт

	Если Не ТестМодуль.ЭтоДвижокВерсии2() Тогда
		Возврат;
	КонецЕсли;

	// Дано

	ПроверяемаяКоллекция = Новый СинхронизированныйСписок(Списки.ИзЭлементов(1, 2));

	// Когда

	// Тогда

	Для каждого Элемент Из ПроверяемаяКоллекция Цикл

		Ожидаем.Что(Элемент)
			.БольшеИлиРавно(1)
			.МеньшеИлиРавно(2);

	КонецЦикла;

КонецПроцедуры

Функция Инкремент(Элемент) Экспорт
	Возврат Элемент + 1;
КонецФункции

Функция БольшеИлиРавноДвум(Элемент) Экспорт
	Два = 2;
	Возврат Элемент >= Два;
КонецФункции

Процедура ДобавитьКПроверяемомуЧислу(Элемент) Экспорт
	ПроверяемоеЧисло = ПроверяемоеЧисло + Элемент;
КонецПроцедуры
