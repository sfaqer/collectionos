// BSLLS:FunctionShouldHaveReturn-off

// Добавляет элемент в коллекцию
//
// Параметры:
//   Элемент - Произвольный - Добавляемый элемент
//
//  Возвращаемое значение:
//   Булево - Истина, если элемент добавлен
//
Функция Добавить(Элемент) Экспорт
КонецФункции

// Добавляет все элементы из переданной коллекции
//
// Параметры:
//   Коллекция - ЧитаемыйКоллекция - Коллекция, элементы которой требуется добавить
//
//  Возвращаемое значение:
//   Булево - Истина, если был добавлен хотя бы один элемент
//
Функция ДобавитьВсе(Коллекция) Экспорт
КонецФункции

// Очищает коллекцию
//
Процедура Очистить() Экспорт
КонецПроцедуры

// Удаляет переданный элемент из коллекции
//
// Параметры:
//   Элемент - Произвольный - Удаляемый элемент
//
//  Возвращаемое значение:
//   Булево - Истина, если элемент был удалён
//
Функция Удалить(Элемент) Экспорт
КонецФункции

// Удаляет все элементы которые содержаться в переданной коллекции
//
// Параметры:
//   Коллекция - ЧитаемыйКоллекция - Коллекция, элементы которой будут удалены
//
//  Возвращаемое значение:
//   Булево - Истина, если был удалён хотя бы один элемент
//
Функция УдалитьВсе(Коллекция) Экспорт
КонецФункции

// Удаляет элементы для которых функция предикат вернёт Истина
//
// Параметры:
//   Предикат - Действие - Делегат на функцию с одним параметром, в которой передаётся элемент коллекции
//            - Строка - Лямбда выражение с одним параметром, в который передаётся элемент коллекции
//   Контекст - Структура - Контекст добавляемый в лямбда выражение, значения будут доступны по обращению
//    к ключу как к переменной.
//    При передачи действия в первом параметре, этот параметр игнорируется
//            - Сценарий - Экземпляр объекта, который будет захвачен в лямбда выражение, в лямбда выражении
//    будет доступен контекст (публичные и приватные поля, публичные методы) объекта.
//    При передачи действия в первом параметре, этот параметр игнорируется
//
// Пример:
//    Коллекция.УдалитьЕсли("(Элемент) -> Элемент >= 2");
//
//    Коллекция.УдалитьЕсли("(Элемент) -> Элемент >= Предел", Новый Структура("Предел", 2));
//
//  Возвращаемое значение:
//   Булево - Истина, если был удалён хотя бы один элемент
//
Функция УдалитьЕсли(Предикат, Контекст) Экспорт
КонецФункции

// Удаляет все элементы которые не содержаться в переданной коллекции
//
// Параметры:
//   Коллекция - ЧитаемыйКоллекция - Коллекция, элементы которой будут сохранены
//
//  Возвращаемое значение:
//   Булево - Истина, если был удалён хотя бы один элемент
//
Функция СохранитьВсе(Коллекция) Экспорт
КонецФункции

&Интерфейс
&Расширяет("ЧитаемаяКоллекция")
Процедура ПриСозданииОбъекта()
	ВызватьИсключение "Нельзя создать экземпляр интерфейса";
КонецПроцедуры
